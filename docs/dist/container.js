define(["react","antd","highlighter"],(function(e,n,t){return function(){"use strict";var r={4093:function(e,n,t){var r=t(7537),o=t.n(r),a=t(3645),c=t.n(a)()(o());c.push([e.id,".container_PppZ6 {\n  margin: 32px 48px 60px;\n  max-width: 720px;\n}\n","",{version:3,sources:["webpack://./src/components/component.less"],names:[],mappings:"AAAA;EACE,sBAAA;EACA,gBAAA;AACF",sourcesContent:[".container {\n  margin: 32px 48px 60px;\n  max-width: 720px;\n}\n"],sourceRoot:""}]),c.locals={container:"container_PppZ6"},n.Z=c},3645:function(e){e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&c[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},7537:function(e){e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),c=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(c).concat([a]).join("\n")}return[n].join("\n")}},3379:function(e){var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],l=r.base?s[0]+r.base:s[0],u=a[l]||0,p="".concat(l," ").concat(u);a[l]=u+1;var d=t(p),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)n[d].references++,n[d].updater(m);else{var f=o(m,r);r.byIndex=i,n.splice(i,0,{identifier:p,updater:f,references:1})}c.push(p)}return c}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=t(a[c]);n[i].references--}for(var s=r(e,o),l=0;l<a.length;l++){var u=t(a[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=s}}},569:function(e){var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},9216:function(e){e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},3565:function(e,n,t){e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},7795:function(e){e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},4589:function(e){e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},2161:function(n){n.exports=e},7937:function(e){e.exports=n},3090:function(e){e.exports=t}},o={};function a(e){var n=o[e];if(void 0!==n)return n.exports;var t=o[e]={id:e,exports:{}};return r[e](t,t.exports,a),t.exports}a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,{a:n}),n},a.d=function(e,n){for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var c={};return function(){a.r(c),a.d(c,{default:function(){return O}});var e=a(2161),n=a.n(e),t=a(7937),r=a(3090),o=a.n(r),i=a(3379),s=a.n(i),l=a(7795),u=a.n(l),p=a(569),d=a.n(p),m=a(3565),f=a.n(m),g=a(9216),y=a.n(g),v=a(4589),E=a.n(v),R=a(4093),h={};h.styleTagTransform=E(),h.setAttributes=f(),h.insert=d().bind(null,"head"),h.domAPI=u(),h.insertStyleElement=y(),s()(R.Z,h);var x=R.Z&&R.Z.locals?R.Z.locals:void 0,C=t.Typography.Title,b=t.Typography.Paragraph,A=t.Typography.Link,T=[{title:"类型",dataIndex:"type"},{title:"描述",dataIndex:"desc"},{title:"是否可以重新加载",dataIndex:"reloadable"}],N=[{type:"LOADING_ERROR",desc:"组件加载失败",reloadable:"yes"},{type:"DEPENDENCIES_LOADING_ERROR",desc:"组件依赖加载失败",reloadable:"yes"},{type:"NOT_DEFINED",desc:"组件未定义",reloadable:"no"},{type:"INVALID_COMPONENT",desc:"错误的组件类型",reloadable:"no"},{type:"SCRIPT_ERROR",desc:"组件运行出错了",reloadable:"yes"},{type:"ROUTER_ERROR",desc:"页面路由出错",reloadable:"no"},{type:"CONTAINER_ERROR",desc:"容器组件出错了",reloadable:"no"}],O=function(){return n().createElement("div",{className:x.container},n().createElement(t.Typography,null,n().createElement(C,{level:2},"容器组件"),n().createElement(b,null,"容器组件用于定义页面结构，全局数据，控制组件加载。可以根据自定义配置生成各种类型页面"),n().createElement(b,null,"容器组件需要导出以下模块"),n().createElement(o(),{language:"ts",code:"// 分别是 全局数据/全局数据操作/页面定义组件/加载提示组件/错误提示组件\nexport { default as store } from './store'\nexport { default as actions } from './actions'\nexport { default as Container } from './container'\nexport { default as Loader } from './loader'\nexport { default as Error } from './error'"}),n().createElement(C,{level:4},"全局数据"),n().createElement(b,null,"全局数据可以被所有组件访问，通常用于存储需要被全局访问数据，例如用户验证信息"),n().createElement(o(),{language:"ts",code:"// store.ts\nexport default {\n  user: {\n    name: 'various',\n  },\n}"}),n().createElement(t.Divider,null),n().createElement(C,{level:4},"数据操作"),n().createElement(b,null,"定义访问全局数据方法（数据处理），同时提供改变全局数据方法。数据操作基于 ",n().createElement(A,{target:"_blank",href:"https://github.com/fratercula/nycticorax"},"nycticorax")),n().createElement(o(),{code:"// actions.ts\nimport { Actions } from '@variousjs/various'\nimport store from './store'\n\ntype Store = typeof store\n\nconst actions: Actions<Store> = {\n  async setName({ dispatch, getStore }, value) {\n    await new Promise((r) => setTimeout(r, 1000))\n    const { user } = getStore()\n    user.name = value\n    dispatch({ user })\n  },\n}\n\nexport default actions",language:"ts"}),n().createElement(t.Divider,null),n().createElement(C,{level:4},"页面定义"),n().createElement(b,null,"页面定义组件用于根据自定义配置生成页面结构，页面路由相关。其方法定义如下"),n().createElement(o(),{language:"ts",code:"import { RouteComponentProps } from 'react-router-dom'\nimport { ComponentType, ReactNode } from 'react'\n\ntype $dispatch = (type: string, method: string, value?: any) => unknown\ntype $render = (params: {\n  name: string,\n  url?: string,\n  module?: string,\n  props?: { [key: string]: any },\n  target: Element | null,\n  onMounted?: () => void,\n}) => () => void\ntype $preload = (names: string[]) => Promise<void>\n\n// 泛型，S 为全局数据类型定义，C 为自定义属性\nexport interface ContainerProps<S = {}, C = {}> {\n  Router: ComponentType<{ children?: ReactNode }>,          // 路由组件\n  $config: Readonly<C>,                                     // 自定义配置\n  // 根据组件配置的名字生成 React 组件\n  $component: (name: string) => ComponentType<{\n    silent?: boolean,\n    [key: string]: any,\n  }>,\n  $store: Readonly<S>,                                      // 全局数据\n  $mounted: string[],                                       // 页面当前加载的组件\n  $dispatch: $dispatch,                                     // 组件/全局通信方法\n  $render: $render,                                         // 动态加载组件方法\n  $preload: $preload,                                       // 组件预加载方法\n  $router: RouteComponentProps<{ [key: string]: string }>,  // 当前页面路由参数\n}"}),n().createElement(b,null,"页面自定义例子，根据 pages 配置生成路由配置"),n().createElement(t.Alert,{message:"请注意定义页面路由时候一定要用 VariousJS 提供的 Router 组件包裹，不然会引起问题。其他 Route/Link 之类组件可以使用 “React-Router” 提供的",type:"warning"}),n().createElement(o(),{language:"tsx",code:"import React, { Component, ComponentType } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { ContainerProps } from '@variousjs/various'\nimport store from './store'\n\ntype Store = typeof store\ntype Config = {\n  pages: {\n    path: string[] | string,\n    components: string[],\n  }[],\n}\n\nclass Container extends Component<ContainerProps<Store, Config>> {\n  render() {\n    const { Router, $component, $config, $router } = this.props\n\n    return (\n      <Router>\n        {\n          $config.pages.map(({ path, components }) => {\n            const cs = () => components.map((name) => {\n              const C = $component(name)\n              return (\n                <div key={name}>\n                  <C />\n                </div>\n              )\n            })\n\n            return (\n              <Route\n                key={Array.isArray(path) ? path.join() : path}\n                exact\n                path={path}\n                component={cs as unknown as ComponentType}\n              />\n            )\n          })\n        }\n      </Router>\n    )\n  }\n}\n\nexport default Container"}),n().createElement(t.Divider,null),n().createElement(C,{level:4},"错误提示"),n().createElement(b,null,"错误提示针对组件加载/运行期间的错误友好提示，并提供重新加载方法"),n().createElement(o(),{language:"ts",code:"export interface ErrorProps {\n  reload?: () => void,\n  type: 'LOADING_ERROR' | 'DEPENDENCIES_LOADING_ERROR' | 'NOT_DEFINED' | 'INVALID_COMPONENT' | 'SCRIPT_ERROR' | 'ROUTER_ERROR' | 'CONTAINER_ERROR',\n  message?: string,\n}"}),n().createElement(b,null,"参考例子"),n().createElement(o(),{language:"tsx",code:"import React, { FC } from 'react'\nimport { Alert, Button } from 'antd'\nimport { ErrorProps } from '@variousjs/various'\n\nconst errorComponent: FC<ErrorProps> = ({ reload, type, message }) => (\n  <>\n    <Alert\n      message=\"Error\"\n      description={message || '组件错误'}\n      type=\"error\"\n    />\n    {\n      reload && <Button onClick={reload}>刷新</Button>\n    }\n  </>\n)\n\nexport default errorComponent"}),n().createElement(b,null,"错误类型定义"),n().createElement(t.Table,{bordered:!0,size:"small",dataSource:N,columns:T,pagination:!1}),n().createElement(t.Divider,null),n().createElement(C,{level:4},"加载提示"),n().createElement(b,null,"组件都是动态按需加载，需要一个友好的加载提示。参考例子"),n().createElement(o(),{language:"tsx",code:"import React from 'react'\nimport { Skeleton } from 'antd'\n\nexport default function Loader() {\n  return (\n    <div style={{ padding: '32px 48px 60px' }}>\n      <Skeleton active />\n    </div>\n  )\n}"}),n().createElement(b,null,"运行组件使用自定义加载，只需要在定义生成的组件配置 slient 参数即可，这时候组件的加载及出错都不会有提示，需要组件自行处理"),n().createElement(o(),{code:"// ...\nconst C = $component(name)\nreturn (\n  <div key={name}>\n    <C slient />\n  </div>\n)\n// ...",language:"tsx"})))}}(),c}()}));
//# sourceMappingURL=container.js.map