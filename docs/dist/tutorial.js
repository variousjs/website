define(["react"],(function(n){return function(){"use strict";var s={739:function(n,s,a){var t=a(537),p=a.n(t),o=a(645),c=a.n(o)()(p());c.push([n.id,".md_eATBI {\n  padding: 32px 48px 60px 0;\n}\n","",{version:3,sources:["webpack://./src/helper/markdown.less"],names:[],mappings:"AAAA;EACE,yBAAA;AACF",sourcesContent:[".md {\n  padding: 32px 48px 60px 0;\n}\n"],sourceRoot:""}]),c.locals={md:"md_eATBI"},s.Z=c},645:function(n){n.exports=function(n){var s=[];return s.toString=function(){return this.map((function(s){var a="",t=void 0!==s[5];return s[4]&&(a+="@supports (".concat(s[4],") {")),s[2]&&(a+="@media ".concat(s[2]," {")),t&&(a+="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {")),a+=n(s),t&&(a+="}"),s[2]&&(a+="}"),s[4]&&(a+="}"),a})).join("")},s.i=function(n,a,t,p,o){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(t)for(var e=0;e<this.length;e++){var u=this[e][0];null!=u&&(c[u]=!0)}for(var l=0;l<n.length;l++){var k=[].concat(n[l]);t&&c[k[0]]||(void 0!==o&&(void 0===k[5]||(k[1]="@layer".concat(k[5].length>0?" ".concat(k[5]):""," {").concat(k[1],"}")),k[5]=o),a&&(k[2]?(k[1]="@media ".concat(k[2]," {").concat(k[1],"}"),k[2]=a):k[2]=a),p&&(k[4]?(k[1]="@supports (".concat(k[4],") {").concat(k[1],"}"),k[4]=p):k[4]="".concat(p)),s.push(k))}},s}},537:function(n){n.exports=function(n){var s=n[1],a=n[3];if(!a)return s;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),p="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(p," */"),c=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[s].concat(c).concat([o]).join("\n")}return[s].join("\n")}},379:function(n){var s=[];function a(n){for(var a=-1,t=0;t<s.length;t++)if(s[t].identifier===n){a=t;break}return a}function t(n,t){for(var o={},c=[],e=0;e<n.length;e++){var u=n[e],l=t.base?u[0]+t.base:u[0],k=o[l]||0,i="".concat(l," ").concat(k);o[l]=k+1;var r=a(i),d={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==r)s[r].references++,s[r].updater(d);else{var m=p(d,t);t.byIndex=e,s.splice(e,0,{identifier:i,updater:m,references:1})}c.push(i)}return c}function p(n,s){var a=s.domAPI(s);return a.update(n),function(s){if(s){if(s.css===n.css&&s.media===n.media&&s.sourceMap===n.sourceMap&&s.supports===n.supports&&s.layer===n.layer)return;a.update(n=s)}else a.remove()}}n.exports=function(n,p){var o=t(n=n||[],p=p||{});return function(n){n=n||[];for(var c=0;c<o.length;c++){var e=a(o[c]);s[e].references--}for(var u=t(n,p),l=0;l<o.length;l++){var k=a(o[l]);0===s[k].references&&(s[k].updater(),s.splice(k,1))}o=u}}},569:function(n){var s={};n.exports=function(n,a){var t=function(n){if(void 0===s[n]){var a=document.querySelector(n);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(n){a=null}s[n]=a}return s[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(a)}},216:function(n){n.exports=function(n){var s=document.createElement("style");return n.setAttributes(s,n.attributes),n.insert(s,n.options),s}},565:function(n,s,a){n.exports=function(n){var s=a.nc;s&&n.setAttribute("nonce",s)}},795:function(n){n.exports=function(n){var s=n.insertStyleElement(n);return{update:function(a){!function(n,s,a){var t="";a.supports&&(t+="@supports (".concat(a.supports,") {")),a.media&&(t+="@media ".concat(a.media," {"));var p=void 0!==a.layer;p&&(t+="@layer".concat(a.layer.length>0?" ".concat(a.layer):""," {")),t+=a.css,p&&(t+="}"),a.media&&(t+="}"),a.supports&&(t+="}");var o=a.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),s.styleTagTransform(t,n,s.options)}(s,n,a)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(s)}}}},589:function(n){n.exports=function(n,s){if(s.styleSheet)s.styleSheet.cssText=n;else{for(;s.firstChild;)s.removeChild(s.firstChild);s.appendChild(document.createTextNode(n))}}},161:function(s){s.exports=n}},a={};function t(n){var p=a[n];if(void 0!==p)return p.exports;var o=a[n]={id:n,exports:{}};return s[n](o,o.exports,t),o.exports}t.n=function(n){var s=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(s,{a:s}),s},t.d=function(n,s){for(var a in s)t.o(s,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:s[a]})},t.o=function(n,s){return Object.prototype.hasOwnProperty.call(n,s)},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var p={};return function(){t.r(p),t.d(p,{default:function(){return w}});var n=t(161),s=t.n(n),a=t(379),o=t.n(a),c=t(795),e=t.n(c),u=t(569),l=t.n(u),k=t(565),i=t.n(k),r=t(216),d=t.n(r),m=t(589),g=t.n(m),f=t(739),y={};y.styleTagTransform=g(),y.setAttributes=i(),y.insert=l().bind(null,"head"),y.domAPI=e(),y.insertStyleElement=d(),o()(f.Z,y);var h=f.Z&&f.Z.locals?f.Z.locals:void 0,v=function(n){var a=n.children;return s().createElement("div",{className:"".concat(h.md," markdown-body"),dangerouslySetInnerHTML:{__html:a}})},w=function(){return s().createElement(v,null,'<h1> <a href="#教程" id="教程"></a>教程 </h1><p>这里将从零开始创建一个基于 VariousJS 的网站应用。该应用非常简单，但会包含大部分 VariousJS 的功能</p><h2> <a href="#前期准备" id="前期准备"></a>前期准备 </h2><p>开始之前需要了解 React 相关，以及应用构建打包工具，例如 webpack 等。另外需要明白 VariousJS 的组件体系，以及配置核心由主组件/功能呢组件构成。 应用打包可以使用 VariousJS 模版打包或者自行配置，需要注意以下两点</p><ul> <li>应用需要打包成 amd 格式</li> <li>需要将 <code>react</code> / <code>react-dom</code> / <code>@variousjs/various</code> 构建排除</li> </ul> <p>为了快速构建教程所需要的组件应用，这里使用一个简单打包工具，简单配置即可进行应用打包。</p><h3> <a href="#安装 Falco" id="安装 Falco"></a>安装 Falco </h3><p>Falco 是一个简单的应用打包工具，通过简单配置即可进行应用打包，并且可以自动安装依赖。以下安装 Falco</p><pre class="language-bash"><code class="language-bash">$ <span class="token function">npm</span> i @fratercula/falco -g</code></pre><p>全局安装完成，即可进行应用打包。但教程的应用需要一些特殊定制，所以需要在使用目录添加配置 <code>falco.config.js</code></p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 指定应用打包入口，随着教程，这里需要相应进行改动</span>\n    a<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'./a.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 需要将 react，react-dom，@variousjs/various 进行打包排除</span>\n  externals<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'react\'</span><span class="token punctuation">,</span>\n      root<span class="token operator">:</span> <span class="token string">\'React\'</span><span class="token punctuation">,</span>\n      amd<span class="token operator">:</span> <span class="token string">\'react\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'react-dom\'</span><span class="token punctuation">,</span>\n      root<span class="token operator">:</span> <span class="token string">\'ReactDOM\'</span><span class="token punctuation">,</span>\n      amd<span class="token operator">:</span> <span class="token string">\'react-dom\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'@variousjs/various\'</span><span class="token punctuation">,</span>\n      root<span class="token operator">:</span> <span class="token string">\'Various\'</span><span class="token punctuation">,</span>\n      amd<span class="token operator">:</span> <span class="token string">\'@variousjs/various\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 教程 cdn 方式使用 antd UI 组件库，所以这里需要构建排除</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'antd\'</span><span class="token punctuation">,</span>\n      root<span class="token operator">:</span> <span class="token string">\'antd\'</span><span class="token punctuation">,</span>\n      amd<span class="token operator">:</span> <span class="token string">\'antd\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'./dist\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> <span class="token string">\'[name].js\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// 指定打包成 amd 格式</span>\n    libraryTarget<span class="token operator">:</span> <span class="token string">\'amd\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 不需要任何 polyfill，因为 variousjs 默认都包含了</span>\n  targets<span class="token operator">:</span> <span class="token punctuation">{</span> esmodules<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">\'production\'</span><span class="token punctuation">,</span>\n  sourceMap<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre><p>添加完配置文件，就可以进行应用打包了。以下命令执行后就在在 <code>dist</code> 目录生成打包后应用</p><pre class="language-bash"><code class="language-bash">$ falco -c</code></pre><h2> <a href="#创建主组件" id="创建主组件"></a>创建主组件 </h2><p>主组件承载全局数据及控制页面组件展示，以及页面路由定义相关</p><h3> <a href="#定义全局数据" id="定义全局数据"></a>定义全局数据 </h3><p>创建 <code>store.js</code>，并设定全局值 <code>user</code></p><pre class="language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  user<span class="token operator">:</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'various\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre><h3> <a href="#控制全局数据" id="控制全局数据"></a>控制全局数据 </h3><p>全局数据不能直接修改，需要创建 <code>actions.js</code>，用于操控数据变化</p><pre class="language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token keyword">async</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> getStore <span class="token punctuation">}</span><span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> next <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    user<span class="token punctuation">.</span>name <span class="token operator">=</span> next\n    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 虽然能够直接通过 $store 数据，但这里还是可以进行一些简单数据处理</span>\n  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> getStore <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> user<span class="token punctuation">.</span>name\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre><h3> <a href="#定义错误提示组件" id="定义错误提示组件"></a>定义错误提示组件 </h3><p>错误提示针对组件加载/运行期间的错误友好提示，统一进行处理，创建 <code>error.jsx</code></p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Alert <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> message<span class="token punctuation">,</span> type <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Alert</span></span>\n      <span class="token attr-name">message</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Error<span class="token punctuation">"</span></span>\n      <span class="token attr-name">description</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>message <span class="token operator">||</span> <span class="token string">\'组件错误\'</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre><h3> <a href="#定义加载提示组件" id="定义加载提示组件"></a>定义加载提示组件 </h3><p>创建 <code>loader.jsx</code>，用于统一的展示组件加载提示</p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Spin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Loader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Spin</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre><h3> <a href="#创建组件容器" id="创建组件容器"></a>创建组件容器 </h3><p>容器定义页面路由，及页面布局。理论上可以根据配置定义页面各种各样的样式。这里创建最简单的页面结构，接入的组件只需要按顺序排布即可。另外也创建路由相关，创建 <code>container.jsx</code></p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Router<span class="token punctuation">,</span> Route <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@variousjs/various\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Radio<span class="token punctuation">,</span> Badge<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span>\n<span class="token keyword">import</span> csses <span class="token keyword">from</span> <span class="token string">\'./entry.module.less\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">\'/\'</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onRouterChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>$router<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>$router<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> $component<span class="token punctuation">,</span> $config<span class="token punctuation">,</span> $store <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props\n\n    <span class="token comment">// 假设有以下配置</span>\n    <span class="token comment">// {</span>\n    <span class="token comment">//   ...</span>\n    <span class="token comment">//   pages: [</span>\n    <span class="token comment">//     {</span>\n    <span class="token comment">//       path: \'/\',</span>\n    <span class="token comment">//       components: [\'a\'],</span>\n    <span class="token comment">//     },</span>\n    <span class="token comment">//     ...</span>\n    <span class="token comment">//   ],</span>\n    <span class="token comment">//   links: [</span>\n    <span class="token comment">//     {</span>\n    <span class="token comment">//       name: \'Home\',</span>\n    <span class="token comment">//       path: \'/\',</span>\n    <span class="token comment">//     },</span>\n    <span class="token comment">//     ...</span>\n    <span class="token comment">//   ],</span>\n    <span class="token comment">// }</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>csses<span class="token punctuation">.</span>container<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>csses<span class="token punctuation">.</span>top<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>\n            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span>\n            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>path<span class="token punctuation">}</span></span>\n            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onRouterChange<span class="token punctuation">}</span></span>\n            <span class="token attr-name">buttonStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>solid<span class="token punctuation">"</span></span>\n          <span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token punctuation">{</span>\n              $config<span class="token punctuation">.</span>links<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> path<span class="token punctuation">,</span> name <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                  </span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>\n              <span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n            Store:\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span>\n              <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">count</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>$store<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n              <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n              <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">$dispatch</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token string">\'getName\'</span><span class="token punctuation">,</span> <span class="token string">\'A\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">></span></span><span class="token plain-text">\n              Click A\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Router</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token punctuation">{</span>\n            $config<span class="token punctuation">.</span>pages<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> path<span class="token punctuation">,</span> components <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">const</span> <span class="token function-variable function">cs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> components<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token function">$component</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>\n                <span class="token keyword">return</span> <span class="token punctuation">(</span>\n                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n                    <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span>\n                    <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> display<span class="token operator">:</span> <span class="token string">\'inline-block\'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> verticalAlign<span class="token operator">:</span> <span class="token string">\'top\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                  <span class="token punctuation">></span></span><span class="token plain-text">\n                    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">C</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token punctuation">)</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n              <span class="token keyword">return</span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span>\n                  <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span>\n                  <span class="token attr-name">exact</span>\n                  <span class="token attr-name">path</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span>\n                  <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cs<span class="token punctuation">}</span></span>\n                <span class="token punctuation">/></span></span>\n              <span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Router</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre><p>创建样式文件 <code>entry.module.less</code></p><pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.top</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre><h3> <a href="#构建主组件" id="构建主组件"></a>构建主组件 </h3><p>创建好以上文件，接下来创建主应用入口 <code>entry.js</code></p><pre class="language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> actions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./actions\'</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./store\'</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> Container <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./container\'</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> Loader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./loader\'</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> Error <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./error\'</span></code></pre><p>接下来修改 <code>falco.config.js</code> 的 <code>entry</code> 配置，就可以构建主主组件了。会生成 <code>dist/entry.js</code></p><pre class="language-js"><code class="language-js"><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    entry<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'./entry.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre><h2> <a href="#创建功能组件" id="创建功能组件"></a>创建功能组件 </h2><p>功能组件负责某一部分功能，应该尽量的独立。这里创建两个功能组件 <code>a.js</code>，<code>b.js</code>。并且两个组件都非常简单</p><h3> <a href="#A 组件" id="A 组件"></a>A 组件 </h3><p>A 组件提供方法给其他组件调用，进行通信</p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Card<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">A</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> id <span class="token operator">=</span> props<span class="token punctuation">.</span>$router<span class="token operator">?.</span>match<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      &lt;Card\n        hoverable\n        style=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">240</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain-text">\n        cover=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span><span class="token plain-text">\n        actions=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n            <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span>\n            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> props<span class="token punctuation">.</span><span class="token function">$dispatch</span><span class="token punctuation">(</span><span class="token string">\'b\'</span><span class="token punctuation">,</span> <span class="token string">\'setValue\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n          <span class="token punctuation">></span></span><span class="token plain-text">\n            B\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n            <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>store<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">await</span> props<span class="token punctuation">.</span><span class="token function">$dispatch</span><span class="token punctuation">(</span><span class="token string">\'store\'</span><span class="token punctuation">,</span> <span class="token string">\'setName\'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n              message<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">\'changed\'</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token punctuation">></span></span><span class="token plain-text">\n            Store\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token plain-text">\n      >\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Card.Meta</span></span>\n          <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Route Params<span class="token punctuation">"</span></span>\n          <span class="token attr-name">description</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Card</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 提供 getName 方法</span>\n<span class="token constant">A</span><span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> message<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token constant">A</span></code></pre><p>接下来修改 <code>falco.config.js</code> 的 <code>entry</code> 配置，即可打包 A 组件，生成 <code>dist/a.js</code></p><pre class="language-js"><code class="language-js"><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    a<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'./a.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre><h3> <a href="#B 组件" id="B 组件"></a>B 组件 </h3><p>B 组件提供方法给其他组件调用改变自身状态，其中 Store 使用可以参考 <a href="https://github.com/fratercula/nycticorax">nycticorax</a></p><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@variousjs/various\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Descriptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  createStore<span class="token punctuation">,</span>\n  connect<span class="token punctuation">,</span>\n  dispatch<span class="token punctuation">,</span>\n  getStore<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Store</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">class</span> <span class="token class-name">X</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供 setValue 方法</span>\n  <span class="token keyword">static</span> <span class="token function-variable function">setValue</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">getStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token operator">:</span> value <span class="token operator">+</span> store<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>$store\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Descriptions</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">bordered</span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>B<span class="token punctuation">"</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Descriptions.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Store<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Descriptions.Item</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Descriptions.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Descriptions.Item</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Descriptions</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">\'value\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token constant">X</span><span class="token punctuation">)</span></code></pre><p>接下来修改 <code>falco.config.js</code> 的 <code>entry</code> 配置，即可打包 B 组件，生成 <code>dist/b.js</code></p><pre class="language-js"><code class="language-js"><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    b<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'./b.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre><h2> <a href="#创建应用页面" id="创建应用页面"></a>创建应用页面 </h2><p>准备了主应用及功能组件，这时候可以配置页面了，在 dist 目录同级创建 <code>index.html</code></p><pre class="language-html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span> VariousJS <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>\n<span class="token comment">&lt;!-- antd 样式 --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/antd@4.16.13/dist/antd.compact.min.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">var</span> <span class="token constant">VARIOUS_CONFIG</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  root<span class="token operator">:</span> <span class="token string">\'#root\'</span><span class="token punctuation">,</span>\n  entry<span class="token operator">:</span> <span class="token string">\'./dist/entry.js\'</span><span class="token punctuation">,</span>\n  routerMode<span class="token operator">:</span> <span class="token string">\'hash\'</span><span class="token punctuation">,</span>\n  dependencies<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 内置依赖，如果不定义会默认使用 unpkg cdn 链接</span>\n    react<span class="token operator">:</span> <span class="token string">\'https://cdn.jsdelivr.net/npm/react@17.0.2/umd/react.production.min.js\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'react-dom\'</span><span class="token operator">:</span> <span class="token string">\'https://cdn.jsdelivr.net/npm/react-dom@17.0.2/umd/react-dom.production.min.js\'</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 依赖定义，antd 依赖 moment</span>\n    moment<span class="token operator">:</span> <span class="token string">\'https://cdn.jsdelivr.net/npm/moment@2.29.1/min/moment.min.js\'</span><span class="token punctuation">,</span>\n    antd<span class="token operator">:</span> <span class="token string">\'https://cdn.jsdelivr.net/npm/antd@4.16.13/dist/antd-with-locales.min.js\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 组件定义</span>\n    a<span class="token operator">:</span> <span class="token string">\'./dist/a.js\'</span><span class="token punctuation">,</span>\n    b<span class="token operator">:</span> <span class="token string">\'./dist/b.js\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 以下属于自定义属性</span>\n  pages<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'/\'</span><span class="token punctuation">,</span> <span class="token string">\'/com/:id\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      components<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token string">\'b\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">\'/error\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// 定义不存在的组件，测试错误情况</span>\n      components<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'error\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  links<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'Router `/`\'</span><span class="token punctuation">,</span>\n      path<span class="token operator">:</span> <span class="token string">\'/\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'Router `/com/5`\'</span><span class="token punctuation">,</span>\n      path<span class="token operator">:</span> <span class="token string">\'/com/5\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'Router `error`\'</span><span class="token punctuation">,</span>\n      path<span class="token operator">:</span> <span class="token string">\'/error\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/@variousjs/various@0.3.0/dist/index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2> <a href="#全部完成" id="全部完成"></a>全部完成 </h2><p>接着创建 web 服务，访问 <code>index.html</code> 即可查看网站应用了。这里提供一个 <a href="/example/">DEMO</a>，另外可以源码可以在 <code>https://github.com/variousjs/website/tree/master/docs/example</code> 查看</p>')}}(),p}()}));
//# sourceMappingURL=tutorial.js.map