{"version":3,"file":"communication.js","mappings":"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","sources":["webpack://variousjs/./src/helper/markdown.tsx","webpack://variousjs/./src/helper/markdown.less","webpack://variousjs/./node_modules/css-loader/dist/runtime/api.js","webpack://variousjs/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://variousjs/./src/components/communication/content.md","webpack://variousjs/./src/helper/markdown.less?2aa6","webpack://variousjs/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://variousjs/external amd {\"root\":\"React\",\"amd\":\"react\"}","webpack://variousjs/webpack/bootstrap","webpack://variousjs/webpack/runtime/compat get default export","webpack://variousjs/webpack/runtime/define property getters","webpack://variousjs/webpack/runtime/hasOwnProperty shorthand","webpack://variousjs/webpack/runtime/make namespace object","webpack://variousjs/./src/components/communication/index.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport csses from  './markdown.less'\n\ntype Data = {\n  content: string,\n  toc: string,\n}\n\nconst M: FC<{ data: Data }> = ({ data }) => (\n  <>\n    {\n    data.toc ? <div className={csses.toc}>\n      <div\n        className={`${csses.list} markdown-body`}\n        dangerouslySetInnerHTML={{ __html: data.toc }}\n      />\n    </div> : null\n    }\n    <div\n      className={`${csses.md} markdown-body`}\n      dangerouslySetInnerHTML={{ __html: data.content }}\n    />\n  </>\n)\n\nexport default M\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".md_eATBI {\\n  padding: 32px 48px 60px 0;\\n}\\n@media (max-width: 800px) {\\n  .md_eATBI {\\n    padding-left: 20px;\\n    padding-right: 20px;\\n  }\\n  .toc_Q86k4 {\\n    display: none;\\n  }\\n}\\n.toc_Q86k4 {\\n  position: fixed;\\n  left: 10px;\\n  margin-top: 35px;\\n}\\n.list_ISPoe {\\n  transition: all 0.3s ease;\\n  background: #fff;\\n  border: 3px solid #eee;\\n  padding: 10px 14px 10px 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/helper/markdown.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAA;AACF;AAEA;EACE;IACE,kBAAA;IACA,mBAAA;EAAF;EAGA;IACE,aAAA;EADF;AACF;AAIA;EACE,eAAA;EACA,UAAA;EACA,gBAAA;AAFF;AAKA;EACE,yBAAA;EACA,gBAAA;EACA,sBAAA;EACA,yBAAA;AAHF\",\"sourcesContent\":[\".md {\\n  padding: 32px 48px 60px 0;\\n}\\n\\n@media (max-width: 800px) {\\n  .md {\\n    padding-left: 20px;\\n    padding-right: 20px;\\n  }\\n\\n  .toc {\\n    display: none;\\n  }\\n}\\n\\n.toc {\\n  position: fixed;\\n  left: 10px;\\n  margin-top: 35px;\\n}\\n\\n.list {\\n  transition: all .3s ease;\\n  background: #fff;\\n  border: 3px solid #eee;\\n  padding: 10px 14px 10px 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"md\": \"md_eATBI\",\n\t\"toc\": \"toc_Q86k4\",\n\t\"list\": \"list_ISPoe\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var _i = 0; _i < this.length; _i++) {\n        var id = this[_i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i2 = 0; _i2 < modules.length; _i2++) {\n      var item = [].concat(modules[_i2]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","export default {\"content\":\"<h1>\\n  <a href=\\\"#组件通信\\\" id=\\\"组件通信\\\"></a>组件通信\\n</h1><p>由于组件完全独立分离，组件间需要一些互相联系的方式，VariousJS 提供简便易用的通信机制，组件间可以方便进行通信联系</p><p>提供的通信方式有两种：方法调用及广播消息</p><!-- toc -->\\n\\n<h2>\\n  <a href=\\\"#方法调用\\\" id=\\\"方法调用\\\"></a>方法调用\\n</h2><p>方法调用的方式为一个组件提供方法，由另外一个组件进行调用，调用后可以返回内容或者进行一些操作。是被动的通信方式</p><h3>\\n  <a href=\\\"#方法提供\\\" id=\\\"方法提供\\\"></a>方法提供\\n</h3><p>方法调用的前提是被调用的组件提供方法，以下为提供方法方式</p><h4>\\n  <a href=\\\"#主体组件\\\" id=\\\"主体组件\\\"></a>主体组件\\n</h4><p>通过全局数据定义及方法提供通信方法</p><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// store.ts 定义全局数据</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  user<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'various'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// actions.ts 定义全局数据操作方法</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Actions <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n<span class=\\\"token keyword\\\">import</span> store <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./store'</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Store</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> store\\n\\n<span class=\\\"token keyword\\\">const</span> actions<span class=\\\"token operator\\\">:</span> Actions<span class=\\\"token operator\\\">&lt;</span>Store<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">async</span> <span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> emit<span class=\\\"token punctuation\\\">,</span> getStore <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\"><span class=\\\"token builtin\\\">Promise</span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> user <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getStore</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    user<span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">=</span> value\\n    <span class=\\\"token function\\\">emit</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> user <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> actions</code></pre><p>通过以上数据及方法定义，全局提供了 <code>setName</code> 方法，其他组件可以访问该方法修改全局数据 <code>user</code></p><h4>\\n  <a href=\\\"#功能组件\\\" id=\\\"功能组件\\\"></a>功能组件\\n</h4><p>功能组件有两种形式，<code>Function Component</code> 及 <code>Class Component</code>。两种方式的组件提供调用方法并不一样，并且要考虑组件的数据安全性，其他组件不能随意访问内部数据</p><p>Function Component 通过定义静态属性方法提供</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">FC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Invoker <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">A</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">FC</span> <span class=\\\"token operator\\\">&amp;</span> <span class=\\\"token operator\\\">&amp;</span> <span class=\\\"token punctuation\\\">{</span> getName<span class=\\\"token operator\\\">:</span> Invoker <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">A</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">getName</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token string\\\">'A'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token constant\\\">A</span></code></pre><p>Class Component 通过定义静态方法 <code>static</code> 提供</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Invoker <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\"><span class=\\\"token constant\\\">A</span></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">static</span> getName<span class=\\\"token operator\\\">:</span> <span class=\\\"token function-variable function\\\">Invoker</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token string\\\">'A'</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">A</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre><p>组件 A 两种方式都提供了方法 <code>getName</code> 调用，其实底层都是提供属性方法的形式。这样处理保证了组件内部数据不被外部直接访问</p><h3>\\n  <a href=\\\"#调用方法\\\" id=\\\"调用方法\\\"></a>调用方法\\n</h3><p>调用其他组件方法时候必须先知道对方组件提供的方法情况</p><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// type 通信类型：store(全局) / 组件名字</span>\\n<span class=\\\"token comment\\\">// method 方法：调用全局或者其他组件提供的方法</span>\\n<span class=\\\"token comment\\\">// value 值：传递的参数</span>\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">$dispatch</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> method<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token builtin\\\">Promise</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">any</span><span class=\\\"token operator\\\">></span></code></pre><p>例如根据上面例子组件提供的方法，可以有以下调用方式</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">FC</span><span class=\\\"token punctuation\\\">,</span> useEffect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ComponentsProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span>ComponentProps<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 改变全局数据</span>\\n    props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'store'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'setName'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'C'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// ...</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token comment\\\">// 获取 A 组件提供的值</span>\\n    props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'A'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'setName'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token builtin\\\">console</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token comment\\\">// 改变 B 组件的状态</span>\\n    props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'B'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'updateValue'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'C'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">C</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token constant\\\">C</span></code></pre><h3>\\n  <a href=\\\"#状态改变\\\" id=\\\"状态改变\\\"></a>状态改变\\n</h3><p>通过定义属性形式提供调用方法，保证了组件内部数据安全性，但有个问题是如何通信改变其他组件的自身状态？答案是使用状态管理</p><p>VariousJS 提供了状态组件 <code>Store</code>，基于 <a href=\\\"https://github.com/fratercula/nycticorax\\\">nycticorax</a>，类似 <code>Redux</code> 的用法，用于组件状态管理</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ComponentProps<span class=\\\"token punctuation\\\">,</span> Store<span class=\\\"token punctuation\\\">,</span> Connect <span class=\\\"token keyword\\\">as</span> <span class=\\\"token constant\\\">CT</span><span class=\\\"token punctuation\\\">,</span> Invoker <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Store</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> value<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Connect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CT</span><span class=\\\"token operator\\\">&lt;</span>Store<span class=\\\"token operator\\\">></span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createStore<span class=\\\"token punctuation\\\">,</span> connect<span class=\\\"token punctuation\\\">,</span> emit <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Store<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">createStore</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> value<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'B'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\"><span class=\\\"token constant\\\">B</span></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component<span class=\\\"token operator\\\">&lt;</span>Connect<span class=\\\"token operator\\\">></span></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">static</span> updateValue<span class=\\\"token operator\\\">:</span> <span class=\\\"token function-variable function\\\">Invoker</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\"><span class=\\\"token builtin\\\">Promise</span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token function\\\">emit</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> value <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">当前值：</span><span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'value'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">)</span></code></pre><p>以上例子 B 组件提供了 <code>updateValue</code> 给其他组件调用改变自身数据状态</p><h2>\\n  <a href=\\\"#广播消息\\\" id=\\\"广播消息\\\"></a>广播消息\\n</h2><p>此方式是一个组件直接进行广播消息，传递相关参数，其他组件可以进行消息监听获取参数。是主动的通信方式</p><h3>\\n  <a href=\\\"#主动广播\\\" id=\\\"主动广播\\\"></a>主动广播\\n</h3><p>组件进行广播消息没有什么限制</p><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// name：事件名字，用于区分</span>\\n<span class=\\\"token comment\\\">// value：传递的参数</span>\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">$postMessage</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span></code></pre><p>以下例子，点击按钮组件就广播了一个名字为 <code>m</code> 的消息，并且传递了参数 <code>hello world</code></p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">FC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ComponentProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">A</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span>ComponentProps<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onMsg</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$postMessage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'m'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'hello world'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onMsg<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">广播消息</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre><h3>\\n  <a href=\\\"#监听消息\\\" id=\\\"监听消息\\\"></a>监听消息\\n</h3><p>其他组件要进行监听消息，必须定义静态方法 <code>$onMessage</code>。请注意组件无法监听到自己广播的消息</p><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">OnMessage</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span>\\n  value<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span></code></pre><p>监听消息返回的参数中可以获取到当前广播消息的组件名字</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">FC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> MessageInvoker <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">A</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token function-variable function\\\">FC</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onMsg<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">广播消息</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">.</span>$onMessage<span class=\\\"token operator\\\">:</span> <span class=\\\"token function-variable function\\\">MessageInvoker</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>m<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token builtin\\\">console</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>m<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token constant\\\">A</span></code></pre>\",\"toc\":\"<ul>\\n<li><a href=\\\"#%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8\\\">方法调用</a><ul>\\n<li><a href=\\\"#%E6%96%B9%E6%B3%95%E6%8F%90%E4%BE%9B\\\">方法提供</a><ul>\\n<li><a href=\\\"#%E4%B8%BB%E4%BD%93%E7%BB%84%E4%BB%B6\\\">主体组件</a></li>\\n<li><a href=\\\"#%E5%8A%9F%E8%83%BD%E7%BB%84%E4%BB%B6\\\">功能组件</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"#%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95\\\">调用方法</a></li>\\n<li><a href=\\\"#%E7%8A%B6%E6%80%81%E6%94%B9%E5%8F%98\\\">状态改变</a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"#%E5%B9%BF%E6%92%AD%E6%B6%88%E6%81%AF\\\">广播消息</a><ul>\\n<li><a href=\\\"#%E4%B8%BB%E5%8A%A8%E5%B9%BF%E6%92%AD\\\">主动广播</a></li>\\n<li><a href=\\\"#%E7%9B%91%E5%90%AC%E6%B6%88%E6%81%AF\\\">监听消息</a></li>\\n</ul>\\n</li>\\n</ul>\\n\"};","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./markdown.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./markdown.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { FC } from 'react'\nimport Md from '../../helper/markdown'\nimport md from './content.md'\n\nconst H: FC = () => {\n  return (\n    <Md data={md} />\n  )\n}\n\nexport default H\n"],"names":["React","csses","M","data","toc","list","__html","md","content","Md","H"],"sourceRoot":""}