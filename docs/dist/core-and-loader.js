define(["react"],(function(n){return function(){"use strict";var a={739:function(n,a,s){var t=s(537),e=s.n(t),o=s(645),p=s.n(o)()(e());p.push([n.id,".md_eATBI {\n  padding: 32px 48px 60px 0;\n}\n","",{version:3,sources:["webpack://./src/helper/markdown.less"],names:[],mappings:"AAAA;EACE,yBAAA;AACF",sourcesContent:[".md {\n  padding: 32px 48px 60px 0;\n}\n"],sourceRoot:""}]),p.locals={md:"md_eATBI"},a.Z=p},645:function(n){n.exports=function(n){var a=[];return a.toString=function(){return this.map((function(a){var s="",t=void 0!==a[5];return a[4]&&(s+="@supports (".concat(a[4],") {")),a[2]&&(s+="@media ".concat(a[2]," {")),t&&(s+="@layer".concat(a[5].length>0?" ".concat(a[5]):""," {")),s+=n(a),t&&(s+="}"),a[2]&&(s+="}"),a[4]&&(s+="}"),s})).join("")},a.i=function(n,s,t,e,o){"string"==typeof n&&(n=[[null,n,void 0]]);var p={};if(t)for(var c=0;c<this.length;c++){var r=this[c][0];null!=r&&(p[r]=!0)}for(var u=0;u<n.length;u++){var i=[].concat(n[u]);t&&p[i[0]]||(void 0!==o&&(void 0===i[5]||(i[1]="@layer".concat(i[5].length>0?" ".concat(i[5]):""," {").concat(i[1],"}")),i[5]=o),s&&(i[2]?(i[1]="@media ".concat(i[2]," {").concat(i[1],"}"),i[2]=s):i[2]=s),e&&(i[4]?(i[1]="@supports (".concat(i[4],") {").concat(i[1],"}"),i[4]=e):i[4]="".concat(e)),a.push(i))}},a}},537:function(n){n.exports=function(n){var a=n[1],s=n[3];if(!s)return a;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),e="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(e," */"),p=s.sources.map((function(n){return"/*# sourceURL=".concat(s.sourceRoot||"").concat(n," */")}));return[a].concat(p).concat([o]).join("\n")}return[a].join("\n")}},379:function(n){var a=[];function s(n){for(var s=-1,t=0;t<a.length;t++)if(a[t].identifier===n){s=t;break}return s}function t(n,t){for(var o={},p=[],c=0;c<n.length;c++){var r=n[c],u=t.base?r[0]+t.base:r[0],i=o[u]||0,l="".concat(u," ").concat(i);o[u]=i+1;var d=s(l),f={css:r[1],media:r[2],sourceMap:r[3],supports:r[4],layer:r[5]};if(-1!==d)a[d].references++,a[d].updater(f);else{var k=e(f,t);t.byIndex=c,a.splice(c,0,{identifier:l,updater:k,references:1})}p.push(l)}return p}function e(n,a){var s=a.domAPI(a);return s.update(n),function(a){if(a){if(a.css===n.css&&a.media===n.media&&a.sourceMap===n.sourceMap&&a.supports===n.supports&&a.layer===n.layer)return;s.update(n=a)}else s.remove()}}n.exports=function(n,e){var o=t(n=n||[],e=e||{});return function(n){n=n||[];for(var p=0;p<o.length;p++){var c=s(o[p]);a[c].references--}for(var r=t(n,e),u=0;u<o.length;u++){var i=s(o[u]);0===a[i].references&&(a[i].updater(),a.splice(i,1))}o=r}}},569:function(n){var a={};n.exports=function(n,s){var t=function(n){if(void 0===a[n]){var s=document.querySelector(n);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(n){s=null}a[n]=s}return a[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(s)}},216:function(n){n.exports=function(n){var a=document.createElement("style");return n.setAttributes(a,n.attributes),n.insert(a,n.options),a}},565:function(n,a,s){n.exports=function(n){var a=s.nc;a&&n.setAttribute("nonce",a)}},795:function(n){n.exports=function(n){var a=n.insertStyleElement(n);return{update:function(s){!function(n,a,s){var t="";s.supports&&(t+="@supports (".concat(s.supports,") {")),s.media&&(t+="@media ".concat(s.media," {"));var e=void 0!==s.layer;e&&(t+="@layer".concat(s.layer.length>0?" ".concat(s.layer):""," {")),t+=s.css,e&&(t+="}"),s.media&&(t+="}"),s.supports&&(t+="}");var o=s.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),a.styleTagTransform(t,n,a.options)}(a,n,s)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(a)}}}},589:function(n){n.exports=function(n,a){if(a.styleSheet)a.styleSheet.cssText=n;else{for(;a.firstChild;)a.removeChild(a.firstChild);a.appendChild(document.createTextNode(n))}}},161:function(a){a.exports=n}},s={};function t(n){var e=s[n];if(void 0!==e)return e.exports;var o=s[n]={id:n,exports:{}};return a[n](o,o.exports,t),o.exports}t.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(a,{a:a}),a},t.d=function(n,a){for(var s in a)t.o(a,s)&&!t.o(n,s)&&Object.defineProperty(n,s,{enumerable:!0,get:a[s]})},t.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var e={};return function(){t.r(e),t.d(e,{default:function(){return S}});var n=t(161),a=t.n(n),s=t(379),o=t.n(s),p=t(795),c=t.n(p),r=t(569),u=t.n(r),i=t(565),l=t.n(i),d=t(216),f=t.n(d),k=t(589),m=t.n(k),v=t(739),h={};h.styleTagTransform=m(),h.setAttributes=l(),h.insert=u().bind(null,"head"),h.domAPI=c(),h.insertStyleElement=f(),o()(v.Z,h);var g=v.Z&&v.Z.locals?v.Z.locals:void 0,y=function(n){var s=n.children;return a().createElement("div",{className:"".concat(g.md," markdown-body"),dangerouslySetInnerHTML:{__html:s}})},S=function(){return a().createElement(y,null,'<h1> <a href="#核心 &amp; 加载器" id="核心 &amp; 加载器"></a>核心 &amp; 加载器 </h1><p>VariousJS 由核心及加载器两部分构成。应用页面引入加载器，由加载器加载核心功能，再由核心功能初始化页面组件相关，并加载其他组件</p><h3> <a href="#加载器" id="加载器"></a>加载器 </h3><p>加载器用于加载 VariousJS 核心，应用主体组件，以及 react / react-dom，并加载浏览器 polyfill。依赖 RequireJS，需要 script 方式引入</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 应用配置</span>\n<span class="token keyword">var</span> <span class="token constant">VARIOUS_CONFIG</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- 引入 RequireJS --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token comment">&lt;!-- 引入 VariousJS 加载器 --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/@variousjs/various/dist/index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>引入后，会读取 <code>VARIOUS_CONFIG</code> 变量，初始化 VariousJS 应用环境</p><h3> <a href="#核心组件" id="核心组件"></a>核心组件 </h3><p>核心组件 <code>@variousjs/various</code> 由加载器加载，并不需要显式在页面中指定引入。核心组件也是 AMD 模式导出，所以实际上核心组件也可以认为是一个依赖组件 核心组件用于初始化主体组件，提供路由，状态功能支持，并导出 TypeScript 类型</p><h3> <a href="#路由相关" id="路由相关"></a>路由相关 </h3><p>路由基于 <code>react-router@4</code>，可以使用以下方法/组件</p><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  Router<span class="token punctuation">,</span>\n  Route<span class="token punctuation">,</span>\n  Link<span class="token punctuation">,</span>\n  generatePath<span class="token punctuation">,</span>\n  Redirect<span class="token punctuation">,</span>\n  Prompt<span class="token punctuation">,</span>\n  NavLink<span class="token punctuation">,</span>\n  matchPath<span class="token punctuation">,</span>\n  Switch<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@variousjs/various\'</span></code></pre><p>其中除了 <code>Router</code> 为路由容器组件，没有任何参数设置，路由能力必须使用此组件。此外其余方法都是 <code>react-router</code> 的直接导出</p><h3> <a href="#状态组件" id="状态组件"></a>状态组件 </h3><p>状态组件基于 <a href="https://github.com/fratercula/nycticorax">nycticorax</a>，用于组件内状态管理，通常用于组件件通信改变自身状态。</p><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> Store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@variousjs/various\'</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  createStore<span class="token punctuation">,</span>\n  connect<span class="token punctuation">,</span>\n  dispatch<span class="token punctuation">,</span>\n  getStore<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Store</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3> <a href="#TypeScript 类型" id="TypeScript 类型"></a>TypeScript 类型 </h3><p>定义了 VariousJS 的一些组件属性及 API 类型</p><pre class="language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 状态方法及属性</span>\n  Connect<span class="token punctuation">,</span>\n  Dispatch<span class="token punctuation">,</span>\n\n  <span class="token comment">// 组件属性及方法</span>\n  ComponentProps<span class="token punctuation">,</span>\n  ErrorProps<span class="token punctuation">,</span>\n  ContainerProps<span class="token punctuation">,</span>\n\n  <span class="token comment">// 全局数据操作属性</span>\n  Actions<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@variousjs/various\'</span></code></pre>')}}(),e}()}));
//# sourceMappingURL=core-and-loader.js.map