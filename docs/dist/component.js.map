{"version":3,"file":"component.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA,IAAME,CAA2B,GAAG,SAA9BA,CAA8B;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,sBAClC;AAAK,aAAS,YAAKF,yDAAL,mBAAd;AAA6C,2BAAuB,EAAE;AAAEI,MAAAA,MAAM,EAAEF;AAAV;AAAtE,IADkC;AAAA,CAApC;;AAIA,+DAAeD,CAAf;;;;;;;;;;;;;;;ACPA;AAC6G;AACjB;AAC5F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA,qDAAqD,8BAA8B,GAAG,SAAS,2FAA2F,WAAW,8BAA8B,8BAA8B,GAAG,qBAAqB;AACzR;AACA;AACA;AACA;AACA,+DAAe,uBAAuB,EAAC;;;;;;;;;;;ACV1B;;AAEb;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA,gDAAgD;AAChD;;AAEA;AACA,qFAAqF;AACrF;;AAEA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,KAAK;AACL,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,kBAAkB;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,sBAAsB;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACrGa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;;;;;ACrBA;AACA,2jBAA2jB,sIAAsI,gLAAgL,wIAAwI,kLAAkL,0IAA0I,oLAAoL,uIAAuI,iLAAiL,sIAAsI,ybAAyb,0FAA0F,uLAAuL,sFAAsF,iXAAiX,mDAAmD,kjBAAkjB,+HAA+H,gLAAgL,uGAAuG,qIAAqI,orBAAorB,gDAAgD,yZAAyZ,gDAAgD,wFAAwF,sFAAsF,6gBAA6gB,6GAA6G,8KAA8K,0MAA0M,glBAAglB,2FAA2F,8jBAA8jB,0KAA0K,kOAAkO,wDAAwD,gJAAgJ,+KAA+K,2FAA2F,wGAAwG,wUAAwU,kMAAkM,mTAAmT,qGAAqG,qIAAqI,onBAAonB,4eAA4e,6MAA6M,8CAA8C,qNAAqN,8PAA8P,8KAA8K,iQAAiQ,wQAAwQ,qgBAAqgB,0RAA0R,8CAA8C,iOAAiO,uLAAuL,uLAAuL,8FAA8F,iJAAiJ,qMAAqM,4CAA4C,0iBAA0iB,oDAAoD,2YAA2Y,iMAAiM,+MAA+M,0CAA0C,+IAA+I,0CAA0C,yMAAyM,uSAAuS,sJAAsJ,orBAAorB,6MAA6M,oFAAoF,uMAAuM,+RAA+R,sdAAsd,ysCAAysC,61BAA61B,oFAAoF,8KAA8K,kGAAkG,6KAA6K,sDAAsD,0RAA0R,8MAA8M,mJAAmJ,0OAA0O,uMAAuM,qfAAqf,qIAAqI,mYAAmY,0DAA0D,KAAK,kGAAkG,4PAA4P,gDAAgD,mMAAmM,uJAAuJ,6IAA6I,olBAAolB,oFAAoF,8KAA8K,kDAAkD,6KAA6K,0DAA0D,mnBAAmnB,wDAAwD,0SAA0S,wWAAwW,qiBAAqiB,mMAAmM,4MAA4M,mKAAmK,2LAA2L,iJAAiJ,2MAA2M,yKAAyK,iTAAiT,iJAAiJ,2MAA2M,4PAA4P,+CAA+C,qMAAqM,sPAAsP,sJAAsJ,kyBAAkyB,0FAA0F,yTAAyT,4CAA4C;AACtq9B;AACA,+DAAe,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;ACFnB,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAA6M;AAC7M;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,+KAAO;;;;AAIuJ;AAC/K,OAAO,+DAAe,+KAAO,IAAI,sLAAc,GAAG,sLAAc,YAAY,EAAC;;;;;;;;;;;AC1BhE;;AAEb;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA;AACA;AACA;;AAEA,IAAMK,CAAK,GAAG,SAARA,CAAQ,GAAM;AAClB,sBACE,2DAAC,wDAAD,QAAKH,mDAAL,CADF;AAGD,CAJD;;AAMA,+DAAeG,CAAf,E","sources":["webpack://variousjs/./src/helper/markdown.tsx","webpack://variousjs/./src/helper/markdown.less","webpack://variousjs/./node_modules/css-loader/dist/runtime/api.js","webpack://variousjs/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://variousjs/./src/components/component/content.md","webpack://variousjs/./src/helper/markdown.less?2aa6","webpack://variousjs/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://variousjs/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://variousjs/external amd {\"root\":\"React\",\"amd\":\"react\"}","webpack://variousjs/webpack/bootstrap","webpack://variousjs/webpack/runtime/compat get default export","webpack://variousjs/webpack/runtime/define property getters","webpack://variousjs/webpack/runtime/hasOwnProperty shorthand","webpack://variousjs/webpack/runtime/make namespace object","webpack://variousjs/./src/components/component/index.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport csses from  './markdown.less'\n\nconst M: FC<{ children: string }> = ({ children }) => (\n  <div className={`${csses.md} markdown-body`} dangerouslySetInnerHTML={{ __html: children }} />\n)\n\nexport default M\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".md_eATBI {\\n  padding: 32px 48px 60px 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/helper/markdown.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAA;AACF\",\"sourcesContent\":[\".md {\\n  padding: 32px 48px 60px 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"md\": \"md_eATBI\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var _i = 0; _i < this.length; _i++) {\n        var id = this[_i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i2 = 0; _i2 < modules.length; _i2++) {\n      var item = [].concat(modules[_i2]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","// Module\nvar code = \"<h1>\\n  <a href=\\\"#组件体系\\\" id=\\\"组件体系\\\"></a>组件体系\\n</h1><p>在 VariousJS 体系下，一切功能，依赖，甚至页面都可以认为是一个 React 组件。每个组件都是独立进行构建打包输出的。\\n虽然都是 AMD 规范导出的组件，但还是有一定的区别。根据组件提供的能力划分，总体上可以分为三类组件。</p><h2>\\n  <a href=\\\"#主体组件\\\" id=\\\"主体组件\\\"></a>主体组件\\n</h2><p>主体组件有且只有一个，用于配置整个应用，控制应用的运行。定义页面路由，以及控制页面布局，控制其他组件的展示。另外也提供全局数据配置，数据共享机制等</p><p>主体组件需要提供模块</p><ul>\\n<li>全局数据定义</li>\\n<li>全局数据操作方法</li>\\n<li>容器组件</li>\\n<li>加载提示组件</li>\\n<li>错误提示组件</li>\\n</ul>\\n<pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> store <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./store'</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> actions <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./actions'</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> Container <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./container'</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> Loader <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./loader'</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> Error <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./error'</span></code></pre><h3>\\n  <a href=\\\"#全局数据定义\\\" id=\\\"全局数据定义\\\"></a>全局数据定义\\n</h3><p>全局数据可以被所有组件访问，通常用于存储需要被全局访问数据，例如用户验证信息</p><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// store.ts</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  user<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'various'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre><h3>\\n  <a href=\\\"#全局数据操作方法\\\" id=\\\"全局数据操作方法\\\"></a>全局数据操作方法\\n</h3><p>定义操作全局数据方法（数据处理），数据操作基于 <a href=\\\"https://github.com/fratercula/nycticorax\\\">nycticorax</a></p><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// actions.ts</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Actions <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n<span class=\\\"token keyword\\\">import</span> store <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./store'</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Store</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> store\\n\\n<span class=\\\"token keyword\\\">const</span> actions<span class=\\\"token operator\\\">:</span> Actions<span class=\\\"token operator\\\">&lt;</span>Store<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">async</span> <span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> dispatch<span class=\\\"token punctuation\\\">,</span> getStore <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">await</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\"><span class=\\\"token builtin\\\">Promise</span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> user <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getStore</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    user<span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">=</span> value\\n    <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> user <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> actions</code></pre><h3>\\n  <a href=\\\"#容器组件\\\" id=\\\"容器组件\\\"></a>容器组件\\n</h3><p>容器组件用于根据自定义配置生成页面结构，页面路由相关，并且负责其他组件的加载控制。\\n可以根据配置进行页面路由及组件控制定义，通过这种形式，就可以通过配置生成新的页面，添加新的功能了，并且不需要主应用重新构建打包</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// container.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component<span class=\\\"token punctuation\\\">,</span> ComponentType <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ContainerProps<span class=\\\"token punctuation\\\">,</span> Router<span class=\\\"token punctuation\\\">,</span> Route<span class=\\\"token punctuation\\\">,</span> Link <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n<span class=\\\"token keyword\\\">import</span> store <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./store'</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Store</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> store\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Config</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  pages<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span>\\n    components<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Container</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component<span class=\\\"token operator\\\">&lt;</span>ContainerProps<span class=\\\"token operator\\\">&lt;</span>Store<span class=\\\"token punctuation\\\">,</span> Config<span class=\\\"token operator\\\">>></span></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> $component<span class=\\\"token punctuation\\\">,</span> $config <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token punctuation\\\">{</span>\\n          $config<span class=\\\"token punctuation\\\">.</span>pages<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> path<span class=\\\"token punctuation\\\">,</span> components <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">cs</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> components<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">name</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n              <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">$component</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span>\\n              <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n                <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n                  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">C</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n                </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n              <span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n                <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token builtin\\\">Array</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isArray</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">?</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">:</span> path<span class=\\\"token punctuation\\\">}</span></span>\\n                <span class=\\\"token attr-name\\\">exact</span>\\n                <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>path<span class=\\\"token punctuation\\\">}</span></span>\\n                <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>cs <span class=\\\"token keyword\\\">as</span> <span class=\\\"token builtin\\\">unknown</span> <span class=\\\"token keyword\\\">as</span> ComponentType<span class=\\\"token punctuation\\\">}</span></span>\\n              <span class=\\\"token punctuation\\\">/></span></span>\\n            <span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> Container</code></pre><h3>\\n  <a href=\\\"#加载提示组件\\\" id=\\\"加载提示组件\\\"></a>加载提示组件\\n</h3><p>组件都是动态加载，所以需要一个友好的加载提示。加载提示组件会在组件加载完成后被移除</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// loader.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Skeleton <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Loader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> padding<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'32px 48px 60px'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Skeleton</span></span> <span class=\\\"token attr-name\\\">active</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre><p>如果希望组件使用自定义加载，只需要在页面定义组件生成的组件配置 <code>$slient</code> 参数即可，这时候组件的加载及出错都不会有提示，需要组件自行处理</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">$component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">C</span></span> <span class=\\\"token attr-name\\\">$slient</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// ...</span></code></pre><h3>\\n  <a href=\\\"#错误提示组件\\\" id=\\\"错误提示组件\\\"></a>错误提示组件\\n</h3><p>当组件加载/运行期间出现问题，并不会导致全局应用或者其他组件受到影响，但需要一个友好的错误提示</p><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ErrorProps</span> <span class=\\\"token punctuation\\\">{</span>\\n  reload<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">,</span>\\n  type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'LOADING_ERROR'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'DEPENDENCIES_LOADING_ERROR'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'NOT_DEFINED'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'INVALID_COMPONENT'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'SCRIPT_ERROR'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'ROUTER_ERROR'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'CONTAINER_ERROR'</span><span class=\\\"token punctuation\\\">,</span>\\n  message<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre><p>错误提示组件有重新加载方法，但并不是所有错误都可以重新加载。以下为错误类型定义及是否可以重新加载</p><table>\\n<thead>\\n<tr>\\n<th>类型</th>\\n<th>描述</th>\\n<th>是否可以重新加载</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td>LOADING_ERROR</td>\\n<td>组件加载失败</td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td>DEPENDENCIES_LOADING_ERROR</td>\\n<td>组件依赖加载失败</td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td>NOT_DEFINED</td>\\n<td>组件未定义</td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td>INVALID_COMPONENT</td>\\n<td>错误的组件类型</td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td>SCRIPT_ERROR</td>\\n<td>组件运行出错了</td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td>ROUTER_ERROR</td>\\n<td>页面路由出错</td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td>CONTAINER_ERROR</td>\\n<td>容器组件出错了</td>\\n<td>no</td>\\n</tr>\\n</tbody></table>\\n<pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">FC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Alert<span class=\\\"token punctuation\\\">,</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ErrorProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> errorComponent<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span>ErrorProps<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> reload<span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">,</span> message <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Alert</span></span>\\n      <span class=\\\"token attr-name\\\">message</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Error<span class=\\\"token punctuation\\\">\\\"</span></span>\\n      <span class=\\\"token attr-name\\\">description</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>message <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">'组件错误'</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>error<span class=\\\"token punctuation\\\">\\\"</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token punctuation\\\">{</span>\\n      reload <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Button</span></span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>reload<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">刷新</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Button</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> errorComponent</code></pre><h2>\\n  <a href=\\\"#功能组件\\\" id=\\\"功能组件\\\"></a>功能组件\\n</h2><p>功能组件由主体组件加载并控制展示，独立不耦合其他组件，可以单独使用并提供相应能力。可以非常简单，是一个小按钮，也可以非常复杂，甚至可以是一个路由页面。遵循独立运行原则，独立的开发测试，打包及发布。\\n功能组件可以与主体组件通信，也可以跟其他组件通信</p><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">FC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ComponentProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@variousjs/various'</span>\\n<span class=\\\"token keyword\\\">import</span> store <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./store'</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Store</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> store\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">H</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span>ComponentProps<span class=\\\"token operator\\\">&lt;</span>Store<span class=\\\"token operator\\\">>></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSet</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 改变主体组件的全局数据</span>\\n    <span class=\\\"token keyword\\\">await</span> props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">$dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'store'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'setName'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'various'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        全局值:\\n        </span><span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>$store<span class=\\\"token punctuation\\\">.</span>user<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        当前页面已加载组件:\\n        </span><span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>$mounted<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">', '</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Button</span></span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSet<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">更新全局</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Button</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token constant\\\">H</span></code></pre><h2>\\n  <a href=\\\"#依赖组件\\\" id=\\\"依赖组件\\\"></a>依赖组件\\n</h2><p>依赖组件即共享组件，提供一些公共的能力，让其他组件可以直接使用，避免重复引入造成浪费。例如 <code>antd</code> UI 组件库。通常以下场景都可以作为依赖组件</p><ul>\\n<li>UI 组件库，例如 “antd” 组件库，提供基础 UI 组件</li>\\n<li>工具类，例如 “lodash”，“moment.js”，提供基础能力支持</li>\\n<li>根据项目情况封装的基础组件，例如基础网络请求，封装一定的验证配置请求库</li>\\n</ul>\\n<p>Various 已经内置 <code>react</code>, <code>react-dom</code> 的依赖，可以直接使用。请注意如果使用了依赖组件，那么进行构建打包时候需要将依赖进行排除，以 webpack 为例子</p><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 排除 antd 打包</span>\\n<span class=\\\"token comment\\\">// ...</span>\\nexternals<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  antd<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    root<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">,</span>\\n    amd<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token comment\\\">// ...</span></code></pre>\";\n// Exports\nexport default code;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./markdown.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./markdown.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { FC } from 'react'\nimport Md from '../../helper/markdown'\nimport md from './content.md'\n\nconst H: FC = () => {\n  return (\n    <Md>{md}</Md>\n  )\n}\n\nexport default H\n"],"names":["React","csses","M","children","md","__html","Md","H"],"sourceRoot":""}